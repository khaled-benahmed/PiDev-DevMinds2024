<?php

namespace ContainerL24lfkl;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_WJgeFOQService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.WJgeFOQ' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.WJgeFOQ'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\AbonnementController::CreateAbonnement' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\AbonnementController::DeleteAbonnement' => ['privates', '.service_locator.RPakEiu', 'get_ServiceLocator_RPakEiuService', true],
            'App\\Controller\\AbonnementController::ReadBackAbonnement' => ['privates', '.service_locator.8b.I63C', 'get_ServiceLocator_8b_I63CService', true],
            'App\\Controller\\AbonnementController::ReadFrontAbonnement' => ['privates', '.service_locator.8b.I63C', 'get_ServiceLocator_8b_I63CService', true],
            'App\\Controller\\AbonnementController::ReadMoreFrontAbonnement' => ['privates', '.service_locator.8b.I63C', 'get_ServiceLocator_8b_I63CService', true],
            'App\\Controller\\AbonnementController::UpdateAbonnement' => ['privates', '.service_locator.RPakEiu', 'get_ServiceLocator_RPakEiuService', true],
            'App\\Controller\\CategorieController::ajoutCategorie' => ['privates', '.service_locator.cg5DUby', 'get_ServiceLocator_Cg5DUbyService', true],
            'App\\Controller\\CategorieController::delete' => ['privates', '.service_locator.yGTA_v5', 'get_ServiceLocator_YGTAV5Service', true],
            'App\\Controller\\CategorieController::index' => ['privates', '.service_locator..0UkRYR', 'get_ServiceLocator__0UkRYRService', true],
            'App\\Controller\\CategorieController::updateCategorie' => ['privates', '.service_locator.yGTA_v5', 'get_ServiceLocator_YGTAV5Service', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\AbonnementController:CreateAbonnement' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\AbonnementController:DeleteAbonnement' => ['privates', '.service_locator.RPakEiu', 'get_ServiceLocator_RPakEiuService', true],
            'App\\Controller\\AbonnementController:ReadBackAbonnement' => ['privates', '.service_locator.8b.I63C', 'get_ServiceLocator_8b_I63CService', true],
            'App\\Controller\\AbonnementController:ReadFrontAbonnement' => ['privates', '.service_locator.8b.I63C', 'get_ServiceLocator_8b_I63CService', true],
            'App\\Controller\\AbonnementController:ReadMoreFrontAbonnement' => ['privates', '.service_locator.8b.I63C', 'get_ServiceLocator_8b_I63CService', true],
            'App\\Controller\\AbonnementController:UpdateAbonnement' => ['privates', '.service_locator.RPakEiu', 'get_ServiceLocator_RPakEiuService', true],
            'App\\Controller\\CategorieController:ajoutCategorie' => ['privates', '.service_locator.cg5DUby', 'get_ServiceLocator_Cg5DUbyService', true],
            'App\\Controller\\CategorieController:delete' => ['privates', '.service_locator.yGTA_v5', 'get_ServiceLocator_YGTAV5Service', true],
            'App\\Controller\\CategorieController:index' => ['privates', '.service_locator..0UkRYR', 'get_ServiceLocator__0UkRYRService', true],
            'App\\Controller\\CategorieController:updateCategorie' => ['privates', '.service_locator.yGTA_v5', 'get_ServiceLocator_YGTAV5Service', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\AbonnementController::CreateAbonnement' => '?',
            'App\\Controller\\AbonnementController::DeleteAbonnement' => '?',
            'App\\Controller\\AbonnementController::ReadBackAbonnement' => '?',
            'App\\Controller\\AbonnementController::ReadFrontAbonnement' => '?',
            'App\\Controller\\AbonnementController::ReadMoreFrontAbonnement' => '?',
            'App\\Controller\\AbonnementController::UpdateAbonnement' => '?',
            'App\\Controller\\CategorieController::ajoutCategorie' => '?',
            'App\\Controller\\CategorieController::delete' => '?',
            'App\\Controller\\CategorieController::index' => '?',
            'App\\Controller\\CategorieController::updateCategorie' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\AbonnementController:CreateAbonnement' => '?',
            'App\\Controller\\AbonnementController:DeleteAbonnement' => '?',
            'App\\Controller\\AbonnementController:ReadBackAbonnement' => '?',
            'App\\Controller\\AbonnementController:ReadFrontAbonnement' => '?',
            'App\\Controller\\AbonnementController:ReadMoreFrontAbonnement' => '?',
            'App\\Controller\\AbonnementController:UpdateAbonnement' => '?',
            'App\\Controller\\CategorieController:ajoutCategorie' => '?',
            'App\\Controller\\CategorieController:delete' => '?',
            'App\\Controller\\CategorieController:index' => '?',
            'App\\Controller\\CategorieController:updateCategorie' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
